/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Doctor;
import Doctor.Doctor_Welcome;
import Doctor.Doctor_SearchPatient;
import Doctor.Doctor_Registration;
import Secure.DBConnect;
import java.sql.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class Edit_TestReport extends javax.swing.JFrame {

    /**
     * Creates new form Tests
     */
    public Edit_TestReport() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Patientid = new javax.swing.JTextField();
        patientname = new javax.swing.JTextField();
        Labassid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Date = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Testid = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Description = new javax.swing.JTextArea();
        testcat = new javax.swing.JComboBox();
        Searchname = new javax.swing.JButton();
        AddTest = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        jbtnBack = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTestcatId = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();

        jLabel7.setText("jLabel7");

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Patient Id :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 40, -1, -1));

        jLabel2.setText("Patient Name :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 94, -1, -1));

        jLabel3.setText("LabAsstant Id:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 142, -1, -1));

        Patientid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientidActionPerformed(evt);
            }
        });
        getContentPane().add(Patientid, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 37, 198, -1));
        getContentPane().add(patientname, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 91, 198, -1));
        getContentPane().add(Labassid, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 139, 198, -1));

        jLabel4.setText("Date :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 194, -1, -1));
        getContentPane().add(Date, new org.netbeans.lib.awtextra.AbsoluteConstraints(197, 191, 198, -1));

        jLabel5.setText("Test Category :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 142, -1, -1));

        jLabel6.setText("Test Id :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 40, -1, -1));
        getContentPane().add(Testid, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 50, 220, -1));

        jLabel8.setText("Description :");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 266, -1, -1));

        Description.setColumns(20);
        Description.setRows(5);
        jScrollPane1.setViewportView(Description);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 311, 532, 242));

        testcat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Blood ", "Urine", "X-ray", "MRI", "Scane" }));
        getContentPane().add(testcat, new org.netbeans.lib.awtextra.AbsoluteConstraints(601, 139, 220, -1));

        Searchname.setText("Search");
        Searchname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchnameActionPerformed(evt);
            }
        });
        getContentPane().add(Searchname, new org.netbeans.lib.awtextra.AbsoluteConstraints(859, 493, 121, -1));

        AddTest.setText("ADD");
        AddTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddTestActionPerformed(evt);
            }
        });
        getContentPane().add(AddTest, new org.netbeans.lib.awtextra.AbsoluteConstraints(859, 450, 121, -1));

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        getContentPane().add(Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(859, 534, 121, -1));

        jbtnBack.setText("Back");
        jbtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBackActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(859, 628, 121, -1));

        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });
        getContentPane().add(Reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(859, 585, 121, -1));

        jLabel9.setText("Test_CategoryId :");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(446, 94, -1, -1));

        jTestcatId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Tc1", "Tc2", "Tc3" }));
        getContentPane().add(jTestcatId, new org.netbeans.lib.awtextra.AbsoluteConstraints(601, 91, 220, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/all.jpg"))); // NOI18N
        jLabel10.setText("jLabel10");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 670));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PatientidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PatientidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientidActionPerformed

    private void SearchnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchnameActionPerformed
        if(Patientid.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Error! Empty PatientId field","Unuccess!",JOptionPane.INFORMATION_MESSAGE);
            return;
        }     
        if(Testid.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Error! Empty TestId field","Unuccess!",JOptionPane.INFORMATION_MESSAGE);
            return;
            
        }
        try {
            Statement stat= DBConnect.getStatemennt();
            ResultSet rs1 = stat.executeQuery("SELECT 	Patient_Id,Patient_name,LabAsstant_id,Date,Testcategory_id,Test_Category,Description FROM test_results WHERE Patient_Id='"+Patientid.getText()+"' AND Testid='"+Testid.getText()+"'");
            
            boolean type=false;
            while(rs1.next()) {
                String paid = rs1.getString(1);
                String  Name=rs1.getString(2);
                //String test_id=rs1.getString(3);
                String labass_id=rs1.getString(3);
                String  date=rs1.getString(4);
                String testcatId = rs1.getString(5);
                String test_category=rs1.getString(6);
                String description=rs1.getString(7);
                
                
                System.out.println(paid);
                System.out.println(Name);
                
                if(paid.equals(Patientid.getText())) 
               {
                   type = true;
                patientname.setText(Name);
                //Testid.setText(test_id);
                Labassid.setText(labass_id);
                Date.setText(date);
                jTestcatId.setSelectedItem(testcatId);
                testcat.setSelectedItem(test_category);
                Description.setText(description);
    }//GEN-LAST:event_SearchnameActionPerformed
}
            if(type==false)
            {
                
                 JOptionPane.showMessageDialog(this,"Warning!There is no any patient in that Number!","Unsuccess!",JOptionPane.INFORMATION_MESSAGE);   
            }
        }
        
         catch (SQLException ex) {
            Logger.getLogger(Doctor_SearchPatient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
                
                
                
                
                
                
    private void AddTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddTestActionPerformed
        if(Patientid.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Error! Empty PatientId field","Unuccess!",JOptionPane.INFORMATION_MESSAGE);
            return;
        }     
        if(Testid.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Error! Empty TestId field","Unuccess!",JOptionPane.INFORMATION_MESSAGE);
            return;
            
        }
        
        try {
            Statement stat= DBConnect.getStatemennt();
           
            stat.executeUpdate("INSERT INTO test_results(Testid,Patient_Id,Patient_name,LabAsstant_id,Date,Testcategory_id,Test_Category,Description) VALUES('"+Testid.getText()+"','"+Patientid.getText()+"','"+patientname.getText()+"','"+Labassid.getText()+"','"+Date.getText()+"','"+jTestcatId.getSelectedItem()+"','"+testcat.getSelectedItem()+"','"+Description.getText()+"')");
            JOptionPane.showMessageDialog(this,"Test Report Issued!","Success!",JOptionPane.INFORMATION_MESSAGE);
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Edit_TestReport.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        Testid.setText(null); 
        Patientid.setText(null);
        patientname.setText(null);
        Labassid.setText(null);
        Date.setText(null);
        jTestcatId.setSelectedItem(null);
        testcat.setSelectedItem(null);
        Description.setText(null);
        
        
    }//GEN-LAST:event_AddTestActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        Statement stat= DBConnect.getStatemennt();
        try{
            stat.executeUpdate("UPDATE test_results set Description='"+Description.getText()+"' where Patient_Id='" + Patientid.getText() + "' AND Testid='"+Testid.getText()+"'");   
            JOptionPane.showMessageDialog(this,"Successfilly Updateed!","success!",JOptionPane.INFORMATION_MESSAGE); 
        
        }
        catch (SQLException ex) {
            Logger.getLogger(Doctor_Registration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_UpdateActionPerformed

    private void jbtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBackActionPerformed
        Doctor_Welcome doctor_welcomepage = new Doctor_Welcome();
        doctor_welcomepage.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jbtnBackActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        Patientid.setText(null); 
        patientname.setText(null);
        Labassid.setText(null); 
        Date.setText(null);
        Testid.setText(null);
        Description.setText(null);
        testcat.setSelectedItem("Select");
        jTestcatId.setSelectedItem("Select");
    }//GEN-LAST:event_ResetActionPerformed
            
    
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Edit_TestReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Edit_TestReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Edit_TestReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Edit_TestReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Edit_TestReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddTest;
    private javax.swing.JTextField Date;
    private javax.swing.JTextArea Description;
    private javax.swing.JTextField Labassid;
    private javax.swing.JTextField Patientid;
    private javax.swing.JButton Reset;
    private javax.swing.JButton Searchname;
    private javax.swing.JTextField Testid;
    private javax.swing.JButton Update;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jTestcatId;
    private javax.swing.JButton jbtnBack;
    private javax.swing.JTextField patientname;
    private javax.swing.JComboBox testcat;
    // End of variables declaration//GEN-END:variables
}
