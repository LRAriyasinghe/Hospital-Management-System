package Secure;
import Admin.Ward_Management;
import Admin.Select_EmployeeRegistration;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Statement;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class Other_Register extends javax.swing.JFrame {
    
    /**
     * Creates new form Admin
     */
    public Other_Register() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jFname = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLname = new javax.swing.JTextField();
        jdob = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jdatejoined = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTitle = new javax.swing.JComboBox();
        jmartialst = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jAddress = new javax.swing.JTextField();
        jContactno = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jBranch = new javax.swing.JTextField();
        jBank = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        Grade = new javax.swing.JLabel();
        jGrade = new javax.swing.JComboBox();
        jAdd = new javax.swing.JButton();
        jEdit = new javax.swing.JButton();
        jDelete = new javax.swing.JButton();
        jBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jOtherId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jType = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jDep = new javax.swing.JComboBox();
        female = new javax.swing.JRadioButton();
        male = new javax.swing.JRadioButton();
        getdata = new javax.swing.JButton();
        reset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Personal Details");
        jPanel6.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, -1, -1));
        jPanel6.add(jFname, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 188, 230, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Title :");
        jPanel6.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 150, -1, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("First Name :");
        jPanel6.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 190, -1, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Last Name :");
        jPanel6.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 230, -1, -1));
        jPanel6.add(jLname, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 228, 230, -1));
        jPanel6.add(jdob, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 268, 230, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("DOB :");
        jPanel6.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 270, -1, -1));
        jPanel6.add(jdatejoined, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 391, 230, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Gender :");
        jPanel6.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 311, -1, -1));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Martial Status :");
        jPanel6.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 353, -1, -1));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Date Joined : ");
        jPanel6.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 396, -1, -1));

        jTitle.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mr", "Mrs", "Miss" }));
        jPanel6.add(jTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 148, -1, -1));

        jmartialst.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Married", "UnMarried" }));
        jPanel6.add(jmartialst, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 351, -1, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel23.setText("Contact Details");

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText("Address :");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText("Contact No :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addComponent(jLabel26))
                        .addGap(103, 103, 103)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jAddress)
                            .addComponent(jContactno, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jContactno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 466, -1, -1));

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel24.setText("Bank Details");

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("Branch :");

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setText("Bank Name : ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel24))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel29)
                            .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBank)
                            .addComponent(jBranch, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jBank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jBranch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(436, 466, -1, 227));

        jPanel10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel34.setText("Qualification");

        Grade.setText("Grade :");

        jGrade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Grade A", "Grade B", "Grade C" }));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(Grade)
                        .addGap(96, 96, 96)
                        .addComponent(jGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel34))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel34)
                .addGap(36, 36, 36)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Grade)
                    .addComponent(jGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(303, Short.MAX_VALUE))
        );

        jPanel6.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 53, 350, 400));

        jAdd.setText("Add");
        jAdd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddActionPerformed(evt);
            }
        });
        jPanel6.add(jAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 80, 132, -1));

        jEdit.setText("Edit");
        jEdit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEditActionPerformed(evt);
            }
        });
        jPanel6.add(jEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 180, 132, -1));

        jDelete.setText("Delete");
        jDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteActionPerformed(evt);
            }
        });
        jPanel6.add(jDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 230, 132, -1));

        jBack.setText("Back");
        jBack.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBackActionPerformed(evt);
            }
        });
        jPanel6.add(jBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 310, 132, -1));

        jLabel2.setText("Employee Id :");
        jPanel6.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 56, -1, -1));
        jPanel6.add(jOtherId, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 53, 230, -1));

        jLabel3.setText("Type");
        jPanel6.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 111, 79, -1));

        jType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Admin", "Receptionist", "Lab Assistant", "Maintenance", " ", " " }));
        jType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTypeActionPerformed(evt);
            }
        });
        jPanel6.add(jType, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 108, 230, -1));

        jLabel4.setText("Department :");
        jPanel6.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 429, 85, -1));

        jDep.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "OPD", "LAB", "Maternity", "Pediatrics", "Oncology", "Gynecologist" }));
        jPanel6.add(jDep, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 426, 230, -1));

        buttonGroup1.add(female);
        female.setText("Female");
        jPanel6.add(female, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 308, -1, -1));

        buttonGroup1.add(male);
        male.setText("Male");
        jPanel6.add(male, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 308, -1, -1));

        getdata.setText("Getdata");
        getdata.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getdataActionPerformed(evt);
            }
        });
        jPanel6.add(getdata, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 130, 130, -1));

        reset.setText("Reset");
        reset.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        jPanel6.add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 270, 130, -1));

        jTabbedPane2.addTab("Other Staff", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1010, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddActionPerformed
        try {
            Statement stat= DBConnect.getStatemennt();
            String gender = "";
           


                if (male.isSelected()) {
                    gender = "Male";
                } else if (female.isSelected()) {
                    gender = "Female";
                }
            
            if(jType.getSelectedItem()=="Admin" )
            {
            stat.executeUpdate("INSERT INTO admin(Admin_Id,Grade) VALUES('"+jOtherId.getText()+"','"+jGrade.getSelectedItem()+"')");
            stat.executeUpdate("INSERT INTO employees(Employee_ID,Type,Title,Fname,Lname,DOB,Gender,Martial_Status,Date_Joined,Department,Address,Contact_No,Bank_name,Branch) VALUES('"+jOtherId.getText()+"','"+jType.getSelectedItem()+"','"+jTitle.getSelectedItem()+"','"+jFname.getText()+"','"+jLname.getText()+"','"+jdob.getText()+"','"+ gender +"','"+jmartialst.getSelectedItem()+"','"+jdatejoined.getText()+"','"+jDep.getSelectedItem()+"','"+jAddress.getText()+"','"+jContactno.getText()+"','"+jBank.getText()+"','"+jBranch.getText()+"')");
             JOptionPane.showMessageDialog(this,"Successfilly Added!","success!",JOptionPane.INFORMATION_MESSAGE);
              
           }
            if(jType.getSelectedItem()=="Maintenance" )
            {
           stat.executeUpdate("INSERT INTO maintenance_staff(Maintenancestaff_Id,Grade) VALUES('"+jOtherId.getText()+"','"+jGrade.getSelectedItem()+"')");
             stat.executeUpdate("INSERT INTO employees(Employee_ID,Type,Title,Fname,Lname,DOB,Gender,Martial_Status,Date_Joined,Department,Address,Contact_No,Bank_name,Branch) VALUES('"+jOtherId.getText()+"','"+jType.getSelectedItem()+"','"+jTitle.getSelectedItem()+"','"+jFname.getText()+"','"+jLname.getText()+"','"+jdob.getText()+"','"+ gender +"','"+jmartialst.getSelectedItem()+"','"+jdatejoined.getText()+"','"+jDep.getSelectedItem()+"','"+jAddress.getText()+"','"+jContactno.getText()+"','"+jBank.getText()+"','"+jBranch.getText()+"')");
             JOptionPane.showMessageDialog(this,"Successfilly Added!","success!",JOptionPane.INFORMATION_MESSAGE);
              
           }
             if(jType.getSelectedItem()=="Receptionist" )
            {
            stat.executeUpdate("INSERT INTO reception(Reception_Id,Grade) VALUES('"+jOtherId.getText()+"','"+jGrade.getSelectedItem()+"')");
            stat.executeUpdate("INSERT INTO employees(Employee_ID,Type,Title,Fname,Lname,DOB,Gender,Martial_Status,Date_Joined,Department,Address,Contact_No,Bank_name,Branch) VALUES('"+jOtherId.getText()+"','"+jType.getSelectedItem()+"','"+jTitle.getSelectedItem()+"','"+jFname.getText()+"','"+jLname.getText()+"','"+jdob.getText()+"','"+ gender +"','"+jmartialst.getSelectedItem()+"','"+jdatejoined.getText()+"','"+jDep.getSelectedItem()+"','"+jAddress.getText()+"','"+jContactno.getText()+"','"+jBank.getText()+"','"+jBranch.getText()+"')");
             JOptionPane.showMessageDialog(this,"Successfilly Added!","success!",JOptionPane.INFORMATION_MESSAGE);
              
            }
             if(jType.getSelectedItem()=="Lab Assistant" )
            {
            stat.executeUpdate("INSERT INTO lab_assitence(LabAssistant_Id,Grade) VALUES('"+jOtherId.getText()+"','"+jGrade.getSelectedItem()+"')");
           stat.executeUpdate("INSERT INTO employees(Employee_ID,Type,Title,Fname,Lname,DOB,Gender,Martial_Status,Date_Joined,Department,Address,Contact_No,Bank_name,Branch) VALUES('"+jOtherId.getText()+"','"+jType.getSelectedItem()+"','"+jTitle.getSelectedItem()+"','"+jFname.getText()+"','"+jLname.getText()+"','"+jdob.getText()+"','"+ gender +"','"+jmartialst.getSelectedItem()+"','"+jdatejoined.getText()+"','"+jDep.getSelectedItem()+"','"+jAddress.getText()+"','"+jContactno.getText()+"','"+jBank.getText()+"','"+jBranch.getText()+"')");
             JOptionPane.showMessageDialog(this,"Successfilly Added!","success!",JOptionPane.INFORMATION_MESSAGE);
              
            }
             
        }
        catch (Exception ex) {
           ex.printStackTrace();
            
        }
             
          
        
          
             
             
             
    }//GEN-LAST:event_jAddActionPerformed

    private void jEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEditActionPerformed
      try {
            Statement stat= DBConnect.getStatemennt();
            
           
            
            
             if(jType.getSelectedItem()=="Admin" )
            {
                
                    stat.executeUpdate("UPDATE admin set Grade='"+jGrade.getSelectedItem()+ "' where admin.Admin_Id='" + jOtherId.getText()+ "'" );
                    stat.executeUpdate("UPDATE employees set Type='"+jType.getSelectedItem()+"',Title='"+jTitle.getSelectedItem()+"',Fname='"+jFname.getText()+"',Lname='"+jLname.getText()+"',DOB='"+jdob.getText()+"',Martial_Status='"+jmartialst.getSelectedItem()+"',Date_Joined='"+jdatejoined.getText()+"',Department='"+jDep.getSelectedItem()+"',Address='"+jAddress.getText()+"',Contact_No='"+jContactno.getText()+ "' where Employee_ID='" + jOtherId.getText()+ "'" );
                     JOptionPane.showMessageDialog(this,"Successfilly Updateed!","success!",JOptionPane.INFORMATION_MESSAGE); 
            } 
             
             if(jType.getSelectedItem()=="Lab Assistant" )
            {
                
                     stat.executeUpdate("UPDATE lab_assitence set Grade='"+jGrade.getSelectedItem()+ "' where lab_assitence.LabAssistant_Id='" + jOtherId.getText()+"'");
                    stat.executeUpdate("UPDATE employees set Type='"+jType.getSelectedItem()+"',Title='"+jTitle.getSelectedItem()+"',Fname='"+jFname.getText()+"',Lname='"+jLname.getText()+"',DOB='"+jdob.getText()+"',Martial_Status='"+jmartialst.getSelectedItem()+"',Date_Joined='"+jdatejoined.getText()+"',Department='"+jDep.getSelectedItem()+"',Address='"+jAddress.getText()+"',Contact_No='"+jContactno.getText()+ "' where Employee_ID='" + jOtherId.getText()+"'");
                     JOptionPane.showMessageDialog(this,"Successfilly Updateed!","success!",JOptionPane.INFORMATION_MESSAGE);
            }
              if(jType.getSelectedItem()=="Receptionist" )
            {
                
                    stat.executeUpdate("UPDATE reception set Grade='"+jGrade.getSelectedItem()+ "' where reception.Reception_Id='" + jOtherId.getText()+"'");
                     stat.executeUpdate("UPDATE employees set Type='"+jType.getSelectedItem()+"',Title='"+jTitle.getSelectedItem()+"',Fname='"+jFname.getText()+"',Lname='"+jLname.getText()+"',DOB='"+jdob.getText()+"',Martial_Status='"+jmartialst.getSelectedItem()+"',Date_Joined='"+jdatejoined.getText()+"',Department='"+jDep.getSelectedItem()+"',Address='"+jAddress.getText()+"',Contact_No='"+jContactno.getText()+ "'where Employee_ID='" + jOtherId.getText()+"'");
                     JOptionPane.showMessageDialog(this,"Successfilly Updateed!","success!",JOptionPane.INFORMATION_MESSAGE);
            }
               if(jType.getSelectedItem()=="Maintenance" )
            {
                
                   stat.executeUpdate("UPDATE maintenance_staff set Grade='"+jGrade.getSelectedItem()+ "' where maintenance_staff.Maintenancestaff_Id='" + jOtherId.getText()+"'");
                    stat.executeUpdate("UPDATE employees set Type='"+jType.getSelectedItem()+"',Title='"+jTitle.getSelectedItem()+"',Fname='"+jFname.getText()+"',Lname='"+jLname.getText()+"',DOB='"+jdob.getText()+"',Martial_Status='"+jmartialst.getSelectedItem()+"',Date_Joined='"+jdatejoined.getText()+"',Department='"+jDep.getSelectedItem()+"',Address='"+jAddress.getText()+"',Contact_No='"+jContactno.getText()+ "'where Employee_ID='" + jOtherId.getText()+"'");
                     JOptionPane.showMessageDialog(this,"Successfilly Updateed!","success!",JOptionPane.INFORMATION_MESSAGE); 
            }
       }
             
             catch (SQLException ex) {
                    Logger.getLogger(Other_Register.class.getName()).log(Level.SEVERE, null, ex);
                }
            
             
             
          
            
    }//GEN-LAST:event_jEditActionPerformed

    private void jDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteActionPerformed
         if(jOtherId.getText().equals(""))
      {
            JOptionPane.showMessageDialog(this,"Error! Enter an Employee Id","Unuccess!",JOptionPane.INFORMATION_MESSAGE);
            return;
            
      }
      if(jType.getSelectedItem().equals(""))
      {
            JOptionPane.showMessageDialog(this,"Error! Enter the Type ","Unuccess!",JOptionPane.INFORMATION_MESSAGE);
            return;
            
      }
        try {
            boolean type=false;
            Statement stat= DBConnect.getStatemennt();
            
            
             if(jType.getSelectedItem()=="Admin" )
            {
            stat.executeUpdate("DELETE FROM admin where Admin_ID='" + jOtherId.getText() + "'");
             stat.executeUpdate("DELETE FROM employees where Employee_ID='" + jOtherId.getText() + "'");
             type=true;
            }
             
             if(jType.getSelectedItem()=="Maintenance" )
            {
            stat.executeUpdate("DELETE FROM maintenance_staff where Employee_ID='" + jOtherId.getText() + "'");
            stat.executeUpdate("DELETE FROM employees where Employee_ID='" + jOtherId.getText() + "'");
            type=true;
            }
            if(jType.getSelectedItem()=="Receptionist" )
            {
            stat.executeUpdate("DELETE FROM reception where Employee_ID='" + jOtherId.getText() + "'");
            stat.executeUpdate("DELETE FROM employees where Employee_ID='" + jOtherId.getText() + "'");
            type=true;
            } 
            if(jType.getSelectedItem()=="Lab_Assistence" )
            {
            stat.executeUpdate("DELETE FROM lab assitence where Employee_ID='" + jOtherId.getText() + "'");
            stat.executeUpdate("DELETE FROM employees where Employee_ID='" + jOtherId.getText() + "'");
            type=true;
            }  
             if(type==false)
            {
                
                 JOptionPane.showMessageDialog(this,"Warning!There is no any Employee in that No!","Unsuccess!",JOptionPane.INFORMATION_MESSAGE);   
            }
             
             
             
             
        } catch (SQLException ex) {
            Logger.getLogger(Ward_Management.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jDeleteActionPerformed

    private void jBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBackActionPerformed
        Select_EmployeeRegistration aw = new Select_EmployeeRegistration();
        aw.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jBackActionPerformed

    private void jTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTypeActionPerformed

    private void getdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getdataActionPerformed
       if(jType.getSelectedItem().equals("Select"))
      {
            JOptionPane.showMessageDialog(this,"Error! Enter the Type ","Unuccess!",JOptionPane.INFORMATION_MESSAGE);
            return;
            
      }
        if(jType.getSelectedItem()=="Admin")
       {
        try {
        Statement stat= DBConnect.getStatemennt();
        ResultSet rs = stat.executeQuery("select employees.Employee_ID,employees.Type,employees.Title,employees.Fname,employees.Lname,employees.DOB,employees.Gender,employees.Martial_Status,employees.Date_Joined,employees.Department,employees.Address,employees.Contact_No,employees.Bank_name,employees.Branch,admin.Grade FROM employees,admin where employees.Employee_ID='" + jOtherId.getText() + "' AND admin.Admin_Id='" + jOtherId.getText() + "'" );
               
               boolean type=false;
               while(rs.next()) 
               {
                   String admin_id=rs.getString(1);
                   String Type = rs.getString(2);
                   String title = rs.getString(3);
                   String Fname=rs.getString(4);
                   String Lname=rs.getString(5);
                   String DOB=rs.getString(6);
                   String gender=rs.getString(7);
                   String Martial_Status=rs.getString(8);
                   String Date_Joined=rs.getString(9);
                   String Department=rs.getString(10);
                   String Address=rs.getString(11);
                   String Contact_No=rs.getString(12);
                   String Bank=rs.getString(13);
                   String Branch=rs.getString(14);
                   String grade=rs.getString(15);
                   
                   
                   
                   if(admin_id.equals(jOtherId.getText()))        
                   {
                       type = true;
                       jTitle.setSelectedItem(title);
                       jFname.setText(Fname);
                       jLname.setText(Lname);
                       jdob.setText(DOB);
                       jmartialst.setSelectedItem(Martial_Status);
                       jdatejoined.setText(Date_Joined);
                       jDep.setSelectedItem(Department);
                       jAddress.setText(Address);
                       jContactno.setText(Contact_No);
                       jType.setSelectedItem(Type);
                       jGrade.setSelectedItem(grade);
                       jBank.setText(Bank);
                       jBranch.setText(Branch);
                   
                   
                   if (gender.equals("Female"))
                        {
                            female.setSelected(true);
                        }
                else
                    {
                            male.setSelected(true);
                    }
                   } 
               }
               if(type==false)
            {
                
                 JOptionPane.showMessageDialog(this,"Warning!There is no any Employee in that No!","Unsuccess!",JOptionPane.INFORMATION_MESSAGE);   
            }
        }
             catch (SQLException ex) {
               Logger.getLogger(Other_Register.class.getName()).log(Level.SEVERE, null, ex);
           }  
       }  
       
       
       
       
           if(jType.getSelectedItem()=="Receptionist")
        {
          
               try {
                       Statement stat= DBConnect.getStatemennt();
                       ResultSet rs1 = stat.executeQuery("select employees.Employee_ID,employees.Type,employees.Title,employees.Fname,employees.Lname,employees.DOB,employees.Gender,employees.Martial_Status,employees.Date_Joined,employees.Department,employees.Address,employees.Contact_No,employees.Bank_name,employees.Branch,reception.Grade FROM employees,reception where employees.Employee_ID='" + jOtherId.getText() + "' AND reception.Reception_Id='" + jOtherId.getText() + "'" );
                   
               
               boolean type=false;
               while(rs1.next()) 
               {
                   String reseption_id=rs1.getString(1);
                   String Type = rs1.getString(2);
                   String title = rs1.getString(3);
                   String Fname=rs1.getString(4);
                   String Lname=rs1.getString(5);
                   String DOB=rs1.getString(6);
                   String gender=rs1.getString(7);
                   String Martial_Status=rs1.getString(8);
                   String Date_Joined=rs1.getString(9);
                   String Department=rs1.getString(10);
                   String Address=rs1.getString(11);
                   String Contact_No=rs1.getString(12);
                   String Bank=rs1.getString(13);
                   String Branch=rs1.getString(14);
                   String grade=rs1.getString(15);
                   
                   
                   if(reseption_id.equals(jOtherId.getText()))        
                   {
                       type = true;
                       jTitle.setSelectedItem(title);
                       jFname.setText(Fname);
                       jLname.setText(Lname);
                       jdob.setText(DOB);
                       jmartialst.setSelectedItem(Martial_Status);
                       jdatejoined.setText(Date_Joined);
                       jDep.setSelectedItem(Department);
                       jAddress.setText(Address);
                       jContactno.setText(Contact_No);
                       jType.setSelectedItem(Type);
                       jGrade.setSelectedItem(grade);
                       jBank.setText(Bank);
                       jBranch.setText(Branch);
                       
                       if (gender.equals("Female"))
                        {
                            female.setSelected(true);
                        }
                else
                         {
                            male.setSelected(true);
                            }
                   }
                   
               }
               if(type==false)
            {
                
                 JOptionPane.showMessageDialog(this,"Warning!There is no any Employee in that No!","Unsuccess!",JOptionPane.INFORMATION_MESSAGE);   
            }
                   
           } 
               catch (SQLException ex) {
               Logger.getLogger(Other_Register.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
           
         
           if(jType.getSelectedItem()=="Lab Assistant")
        {
          
               try {
                       Statement stat= DBConnect.getStatemennt();
                       ResultSet rs2 = stat.executeQuery("select employees.Employee_ID,employees.Type,employees.Title,employees.Fname,employees.Lname,employees.DOB,employees.Gender,employees.Martial_Status,employees.Date_Joined,employees.Department,employees.Address,employees.Contact_No,employees.Bank_name,employees.Branch,lab_assitence.Grade FROM employees,lab_assitence where employees.Employee_ID='" + jOtherId.getText() + "' AND lab_assitence.LabAssistant_Id='" + jOtherId.getText() + "'" );
                   
               
               boolean type=false;
               while(rs2.next()) 
               {
                   String labassistant_id=rs2.getString(1);
                   String Type=rs2.getString(2);
                    String title = rs2.getString(3);
                   String Fname=rs2.getString(4);
                   String Lname=rs2.getString(5);
                   String DOB=rs2.getString(6);
                   String gender=rs2.getString(7);
                   String Martial_Status=rs2.getString(8);
                   String Date_Joined=rs2.getString(9);
                   String Department=rs2.getString(10);
                   String Address=rs2.getString(11);
                   String Contact_No=rs2.getString(12);
                   String Bank=rs2.getString(13);
                   String Branch=rs2.getString(14);
                   String grade=rs2.getString(15);
                   
                   
                   
                   if(labassistant_id.equals(jOtherId.getText()))        
                   {
                       type = true;
                       jTitle.setSelectedItem(title);
                       jFname.setText(Fname);
                       jLname.setText(Lname);
                       jdob.setText(DOB);
                       jmartialst.setSelectedItem(Martial_Status);
                       jdatejoined.setText(Date_Joined);
                       jDep.setSelectedItem(Department);
                       jAddress.setText(Address);
                       jContactno.setText(Contact_No);
                       jType.setSelectedItem(Type);
                       jGrade.setSelectedItem(grade);
                       jBank.setText(Bank);
                       jBranch.setText(Branch);
                       
                       
                       if (gender.equals("Female"))
                        {
                            female.setSelected(true);
                        }
                        else
                        {
                            male.setSelected(true);
                        }
                   }
                   
               }
               if(type==false)
            {
                
                 JOptionPane.showMessageDialog(this,"Warning!There is no any Employee in that No!","Unsuccess!",JOptionPane.INFORMATION_MESSAGE);   
            }
                   
           } 
               catch (SQLException ex) {
               Logger.getLogger(Other_Register.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
      
        if(jType.getSelectedItem()=="Maintenance")
        {
          
               try {
                       Statement stat= DBConnect.getStatemennt();
                       ResultSet rs3 = stat.executeQuery("select employees.Employee_ID,employees.Type,employees.Title,employees.Fname,employees.Lname,employees.DOB,employees.Gender,employees.Martial_Status,employees.Date_Joined,employees.Department,employees.Address,employees.Contact_No,employees.Bank_name,employees.Branch,maintenance_staff.Grade FROM employees,maintenance_staff where employees.Employee_ID='" + jOtherId.getText() + "' AND maintenance_staff.Maintenancestaff_Id='" + jOtherId.getText() + "'" );
                   
               
               boolean type=false;
               while(rs3.next()) 
               {
                   String maintenance_staff_id=rs3.getString(1);
                   String Type=rs3.getString(2);
                   String title = rs3.getString(3);
                   String Fname=rs3.getString(4);
                   String Lname=rs3.getString(5);
                   String DOB=rs3.getString(6);
                   String gender=rs3.getString(7);
                   String Martial_Status=rs3.getString(8);
                   String Date_Joined=rs3.getString(9);
                   String Department=rs3.getString(10);
                   String Address=rs3.getString(11);
                   String Contact_No=rs3.getString(12);
                   String Bank=rs3.getString(13);
                   String Branch=rs3.getString(14);
                   String grade=rs3.getString(15);
                   
                   
                   if(maintenance_staff_id.equals(jOtherId.getText()))        
                   {
                       type = true;
                       jTitle.setSelectedItem(title);
                       jFname.setText(Fname);
                       jLname.setText(Lname);
                       jdob.setText(DOB);
                       jmartialst.setSelectedItem(Martial_Status);
                       jdatejoined.setText(Date_Joined);
                       jDep.setSelectedItem(Department);
                       jAddress.setText(Address);
                       jContactno.setText(Contact_No);
                       jType.setSelectedItem(Type);
                       jGrade.setSelectedItem(grade);
                       jBank.setText(Bank);
                       jBranch.setText(Branch);
                       
                       if (gender.equals("Female"))
                        {
                            female.setSelected(true);
                        }
                        else
                        {
                            male.setSelected(true);
                        }
                   }
                   
               }
               if(type==false)
            {
                
                 JOptionPane.showMessageDialog(this,"Warning!There is no any Employee in that No!","Unsuccess!",JOptionPane.INFORMATION_MESSAGE);   
            }
                   
           } 
               catch (SQLException ex) {
               Logger.getLogger(Other_Register.class.getName()).log(Level.SEVERE, null, ex);
           }
        }   
           
           
    }//GEN-LAST:event_getdataActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
                jTitle.setSelectedItem(null);
                jType.setSelectedItem("Select");
                jFname.setText(null);
                jLname.setText(null);
                jdob.setText(null);
                jmartialst.setSelectedItem(null);
                jdatejoined.setText(null);
                jDep.setSelectedItem(null);
                jAddress.setText(null);
                jContactno.setText(null);
                jGrade.setSelectedItem(null);
                jBank.setText(null);
                jBranch.setText(null);
    }//GEN-LAST:event_resetActionPerformed
        
        
        
        
        
        
        
    
    /**}
     *} @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Other_Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Other_Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Other_Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Other_Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Other_Register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Grade;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton female;
    private javax.swing.JButton getdata;
    private javax.swing.JButton jAdd;
    private javax.swing.JTextField jAddress;
    private javax.swing.JButton jBack;
    private javax.swing.JTextField jBank;
    private javax.swing.JTextField jBranch;
    private javax.swing.JTextField jContactno;
    private javax.swing.JButton jDelete;
    private javax.swing.JComboBox jDep;
    private javax.swing.JButton jEdit;
    private javax.swing.JTextField jFname;
    private javax.swing.JComboBox jGrade;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jLname;
    private javax.swing.JTextField jOtherId;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JComboBox jTitle;
    private javax.swing.JComboBox jType;
    private javax.swing.JTextField jdatejoined;
    private javax.swing.JTextField jdob;
    private javax.swing.JComboBox jmartialst;
    private javax.swing.JRadioButton male;
    private javax.swing.JButton reset;
    // End of variables declaration//GEN-END:variables
}
